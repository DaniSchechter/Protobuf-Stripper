// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: demoFlaut.proto

#ifndef PROTOBUF_INCLUDED_demoFlaut_2eproto
#define PROTOBUF_INCLUDED_demoFlaut_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_demoFlaut_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_demoFlaut_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_demoFlaut_2eproto();
namespace demo {
class TaskFlaut;
class TaskFlautDefaultTypeInternal;
extern TaskFlautDefaultTypeInternal _TaskFlaut_default_instance_;
}  // namespace demo
namespace google {
namespace protobuf {
template<> ::demo::TaskFlaut* Arena::CreateMaybeMessage<::demo::TaskFlaut>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace demo {

// ===================================================================

class TaskFlaut final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:demo.TaskFlaut) */ {
 public:
  TaskFlaut();
  virtual ~TaskFlaut();

  TaskFlaut(const TaskFlaut& from);

  inline TaskFlaut& operator=(const TaskFlaut& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TaskFlaut(TaskFlaut&& from) noexcept
    : TaskFlaut() {
    *this = ::std::move(from);
  }

  inline TaskFlaut& operator=(TaskFlaut&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TaskFlaut& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TaskFlaut* internal_default_instance() {
    return reinterpret_cast<const TaskFlaut*>(
               &_TaskFlaut_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(TaskFlaut* other);
  friend void swap(TaskFlaut& a, TaskFlaut& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TaskFlaut* New() const final {
    return CreateMaybeMessage<TaskFlaut>(nullptr);
  }

  TaskFlaut* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TaskFlaut>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TaskFlaut& from);
  void MergeFrom(const TaskFlaut& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TaskFlaut* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float arr = 1 [packed = true];
  int arr_size() const;
  void clear_arr();
  static const int kArrFieldNumber = 1;
  float arr(int index) const;
  void set_arr(int index, float value);
  void add_arr(float value);
  const ::google::protobuf::RepeatedField< float >&
      arr() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_arr();

  // bool done = 2;
  void clear_done();
  static const int kDoneFieldNumber = 2;
  bool done() const;
  void set_done(bool value);

  // @@protoc_insertion_point(class_scope:demo.TaskFlaut)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > arr_;
  mutable std::atomic<int> _arr_cached_byte_size_;
  bool done_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_demoFlaut_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TaskFlaut

// repeated float arr = 1 [packed = true];
inline int TaskFlaut::arr_size() const {
  return arr_.size();
}
inline void TaskFlaut::clear_arr() {
  arr_.Clear();
}
inline float TaskFlaut::arr(int index) const {
  // @@protoc_insertion_point(field_get:demo.TaskFlaut.arr)
  return arr_.Get(index);
}
inline void TaskFlaut::set_arr(int index, float value) {
  arr_.Set(index, value);
  // @@protoc_insertion_point(field_set:demo.TaskFlaut.arr)
}
inline void TaskFlaut::add_arr(float value) {
  arr_.Add(value);
  // @@protoc_insertion_point(field_add:demo.TaskFlaut.arr)
}
inline const ::google::protobuf::RepeatedField< float >&
TaskFlaut::arr() const {
  // @@protoc_insertion_point(field_list:demo.TaskFlaut.arr)
  return arr_;
}
inline ::google::protobuf::RepeatedField< float >*
TaskFlaut::mutable_arr() {
  // @@protoc_insertion_point(field_mutable_list:demo.TaskFlaut.arr)
  return &arr_;
}

// bool done = 2;
inline void TaskFlaut::clear_done() {
  done_ = false;
}
inline bool TaskFlaut::done() const {
  // @@protoc_insertion_point(field_get:demo.TaskFlaut.done)
  return done_;
}
inline void TaskFlaut::set_done(bool value) {
  
  done_ = value;
  // @@protoc_insertion_point(field_set:demo.TaskFlaut.done)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace demo

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_demoFlaut_2eproto
